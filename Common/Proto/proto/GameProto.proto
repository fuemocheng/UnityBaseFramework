syntax = "proto3";

package GameProto;

//账号角色信息
message User{
	int64 UserId = 1; 						//玩家ID
	string UserName = 2;					//角色昵称
}

//角色游戏数据
message UserGameInfo{
	User User = 1;							//角色信息
	int32 LocalId = 2;						//在此房间的Index
	int32 UserState = 3;					//EUserState.NotReady:未准备 EUserState.Ready:准备
	int32 Camp = 4;							//阵营，黑白阵营，红蓝阵营
}

//输入数据
message Input{
	int32 InputH = 1;						//水平输入
	int32 InputV = 2;						//垂直输入
	int32 MousePosX = 3;					//鼠标位置X
	int32 MousePosY = 4;					//鼠标位置Y
	bool IsFire = 5;						//是否开火
	bool IsSpeedUp = 6;						//是否加速
	int32 SkillId = 7;						//技能Id
}

//输入帧
message InputFrame{
	int32 Tick = 1;							//逻辑帧
	int32 LocalId = 2;						//LocalId
	bool IsMiss = 3;						//是否丢失
	Input Input = 4;						//输入数据
}

//服务器帧
message ServerFrame{
	int32 Tick = 1;							//逻辑帧
	repeated InputFrame InputFrames = 2;	//帧数据（每个玩家的输入帧）
}


//心跳
message CSHeartBeat{
}

message SCHeartBeat{
}

//Ping
message CSPing{
	int32 LocalId = 1;
	int64 SendTimestamp = 2;
} 

message SCPing{
	int32 LocalId = 1;
	int64 SendTimestamp = 2;
	int64 TimeSinceServerStart = 3;
}

//自定义数据 Json
message CSCustomData{
	string CustomData = 1;
}

message SCCustomData{
	string CustomData = 1;
}

//登录
message CSLogin{
	string Account = 1;
	string Password = 2;
}

message SCLogin{
	int32 RetCode = 1;
	int32 UserState = 2;
}

//加入游戏房间
message CSJoinRoom{
	int32 RoomId = 1;								//-1:离开房间 0:随机加入 其他:加入指定房间
	int32 Camp = 2;									//0:表示随机加入阵营，其他表示要加入的阵营Id
}

message SCJoinRoom{
	int32 RoomId = 1;								//-1:离开房间 其他:加入了指定房间
	int32 LocalId = 2;								//在此房间的Index
	repeated UserGameInfo UserGameInfos = 3;		//玩家游戏状态数据
}

//准备游戏
message CSReady{
	int32 UserState = 1;							//EUserState.NotReady:未准备(取消准备) EUserState.Ready:准备
}

message SCReady{
	int32 RoomId = 1;
	int32 LocalId = 2;
	repeated UserGameInfo UserGameInfos = 3;		//玩家游戏状态数据
}

//获取游戏开始基础信息（一般重连时用）
message CSGameStartInfo{
}

//游戏开始基础信息
message SCGameStartInfo{
	int32 RoomId = 1;								//RoomId
	int32 MapId = 2;								//地图Id
	int32 LocalId = 3;								//LocalId
	int32 UserCount = 4;							//房间人数
	int32 Seed = 5;									//随机因子
	repeated UserGameInfo UserGameInfos = 6;		//玩家游戏数据
}

//加载进度
message CSLoadingProgress{
	int32 Progress = 1;						//玩家加载进度，1-100；
}

message SCLoadingProgress{
	int32 AllProgress = 1;					//所有玩家整体加载进度，100为所有人都加载完成；
}

//C2S输入帧
message CSInputFrame{
	InputFrame InputFrame = 1;				//输入数据
}

//S2C帧数据
message SCServerFrame{
	int32 StartTick = 1;					//逻辑帧
	repeated ServerFrame ServerFrames = 2;	//玩家的数据帧
}

//请求丢失的帧数据
message CSReqMissFrame{
	int32 StartTick = 1;			
}

message SCReqMissFrame{
	int32 StartTick = 1;					//逻辑帧
	repeated ServerFrame ServerFrames = 2;	//丢失的帧数据
}

//发送HashCode验证
message CSHashCode{
	int32 StartTick = 1;
	repeated int32 HashCodes = 2;
}

message SCHashCode{
	int32 RetCode = 1;
	int32 MismatchedTick = 2;				//不匹配的帧HashCode
}

//游戏控制代码
message CSGameControlCode{
	int32 GameControlCode = 1;					//1:退出游戏 2:暂停游戏 3:继续游戏
}

message SCGameControlCode{
	int32 GameControlCode = 1;					//1:退出游戏 2:暂停游戏 3:继续游戏
}
